/**
 * 
 */
package fr.semantic_learning.semquiz.commands;

public enum AllCommands {
	// commands for Java
	NEW_QUESTION("NEW_QUESTION"), 
	NEW_COMPETENCE("NEW_COMPETENCE"),
	NEW_USER("NEW_USER"),
	NEW_SUBSECTION("NEW_SUBSECTION"),
	NEW_FORMATION("NEW_FORMATION"),
	NEW_SPECIALIZATION("NEW_SPECIALIZATION"),
	NEW_PARCOURS("NEW_PARCOURS"),
	NEW_QUIZ("NEW_QUIZ"),
	NEW_MENTION("NEW_MENTION"),
	NEW_UNIT("NEW_UNIT"),
	NEW_GROUP("NEW_GROUP"),
	NEW_USER_RIGHTS("NEW_USER_RIGHTS"),
	NEW_STUDENT_DETAILS("NEW_STUDENT_DETAILS"),
	NEW_PROF_DETAILS("NEW_PROF_DETAILS"),
	NEW_PENDING_Q("NEW_PENDING_Q"),
	SELECT_QUESTIONS("SELECT_QUESTIONS"),
	SELECT_QUIZ_QUESTIONS("SELECT_QUIZ_QUESTIONS"),
	SELECT_PENDING_QUIZZES("SELECT_PENDING_QUIZZES"),
	
	IS_SAVED("IS_SAVED"),
	
	LOGIN_REQUEST("LOGIN_REQUEST"),
	UNKNOW_COMMAND("UNKNOW_COMMAND"),
	LOGIN_RESPONSE("LOGIN_RESPONSE"),
	LOGIN_RIGHTS("LOGIN_RIGHTS"),
	EXIST_USER("EXIST_USER"),
	SUBSECTION_QUESTIONS("SUBSECTION_QUESTIONS"),
	SELECT_USER("SELECT_USER"),
	GET_SECTIONS("GET_SECTIONS"),
	RETURN_SECTIONS("RETURN_SECTIONS"),
	SELECT_COMPETENCE("SELECT_COMPETENCE"),
    SELECT_SECTION("SELECT_SECTION"),
    SELECT_SUBSECTION("SELECT_SUBSECTION"),
    SELECT_FORMATION("SELECT_FORMATION"),
    SELECT_MENTION("SELECT_MENTION"),
    SELECT_SPECIALIZATION("SELECT_SPECIALIZATION"),
    SELECT_PARCOURS("SELECT_PARCOURS"),
    SELECT_SEMESTER("SELECT_SEMESTER"),
    SELECT_EVALUATIONTYPE("SELECT_EVALUATIONTYPE"),
    SELECT_UNIT("SELECT_UNIT"),
    GET_FORMATIONS("GET_FORMATIONS"),
	RETURN_FORMATIONS("RETURN_FORMATIONS"),
	RETURN_ALIKE_SECTIONS("RETURN_ALIKE_SECTIONS"),
	GET_ALIKE_SECTIONS("GET_ALIKE_SECTIONS"),
	SELECT_RIGHTS("SELECT_RIGHTS"),
	SELECT_YEAR("SELECT_YEAR"),
	SELECT_ALL_RIGHTS("SELECT_ALL_RIGHTS"),
	SELECT_ALL_QUIZ("SELECT_ALL_QUIZ");
	
	private final String command;
	
	AllCommands(String command){
		this.command = command;
	}

    public static AllCommands toCommands(String command)
    {
        try {
            return valueOf(command);
        } 
        catch (Exception ex) {
            return UNKNOW_COMMAND;
        }
    }  
	
	/**
	 * @return the command
	 */
	public String getCommand() {
		return command;
	}	
	
	
}